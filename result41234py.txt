(tensorflow) D:\tensorflow>python 1234.py
Successfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.
Extracting .\train-images-idx3-ubyte.gz
Successfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.
Extracting .\train-labels-idx1-ubyte.gz
Successfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.
Extracting .\t10k-images-idx3-ubyte.gz
Successfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.
Extracting .\t10k-labels-idx1-ubyte.gz
2018-03-19 23:46:08.646892: W c:\l\work\tensorflow-1.1.0\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE instructions, but these are available on your machine and could speed up CPU computations.
2018-03-19 23:46:08.663736: W c:\l\work\tensorflow-1.1.0\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE2 instructions, but these are available on your machine and could speed up CPU computations.
2018-03-19 23:46:08.682160: W c:\l\work\tensorflow-1.1.0\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.
2018-03-19 23:46:08.703067: W c:\l\work\tensorflow-1.1.0\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.
2018-03-19 23:46:08.722367: W c:\l\work\tensorflow-1.1.0\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.
2018-03-19 23:46:08.742925: W c:\l\work\tensorflow-1.1.0\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.
2018-03-19 23:46:08.762046: W c:\l\work\tensorflow-1.1.0\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.
2018-03-19 23:46:08.778927: W c:\l\work\tensorflow-1.1.0\tensorflow\core\platform\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.
2018-03-19 23:46:09.938787: I c:\l\work\tensorflow-1.1.0\tensorflow\core\common_runtime\gpu\gpu_device.cc:887] Found device 0 with properties:
name: GeForce 940M
major: 5 minor: 0 memoryClockRate (GHz) 1.176
pciBusID 0000:01:00.0
Total memory: 2.00GiB
Free memory: 1.66GiB
2018-03-19 23:46:09.953455: I c:\l\work\tensorflow-1.1.0\tensorflow\core\common_runtime\gpu\gpu_device.cc:908] DMA: 0
2018-03-19 23:46:09.957418: I c:\l\work\tensorflow-1.1.0\tensorflow\core\common_runtime\gpu\gpu_device.cc:918] 0:   Y
2018-03-19 23:46:09.973411: I c:\l\work\tensorflow-1.1.0\tensorflow\core\common_runtime\gpu\gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce 940M, pci bus id: 0000:01:00.0)
After 0 training step(s),validation accuracyusing average model is 0.08139999210834503
After 1000 training step(s),validation accuracyusing average model is 0.9763997793197632
After 2000 training step(s),validation accuracyusing average model is 0.9803997278213501
After 3000 training step(s),validation accuracyusing average model is 0.9815998077392578
After 4000 training step(s),validation accuracyusing average model is 0.9831997156143188
After 5000 training step(s),validation accuracyusing average model is 0.982599675655365
After 6000 training step(s),validation accuracyusing average model is 0.9831997156143188
After 7000 training step(s),validation accuracyusing average model is 0.982799768447876
After 8000 training step(s),validation accuracyusing average model is 0.9839997887611389
After 9000 training step(s),validation accuracyusing average model is 0.9825997352600098
After 10000 training step(s),validation accuracyusing average model is 0.9837996959686279
After 11000 training step(s),validation accuracyusing average model is 0.9835996627807617
After 12000 training step(s),validation accuracyusing average model is 0.9833996295928955
After 13000 training step(s),validation accuracyusing average model is 0.9839996099472046
After 14000 training step(s),validation accuracyusing average model is 0.9835997819900513
After 15000 training step(s),validation accuracyusing average model is 0.9839997291564941
After 16000 training step(s),validation accuracyusing average model is 0.9845997095108032
After 17000 training step(s),validation accuracyusing average model is 0.9839997291564941
After 18000 training step(s),validation accuracyusing average model is 0.9837996959686279
After 19000 training step(s),validation accuracyusing average model is 0.9839997291564941
After 20000 training step(s),validation accuracyusing average model is 0.9831997156143188
After 21000 training step(s),validation accuracyusing average model is 0.9845997095108032
After 22000 training step(s),validation accuracyusing average model is 0.9839996099472046
After 23000 training step(s),validation accuracyusing average model is 0.9835997223854065
After 24000 training step(s),validation accuracyusing average model is 0.9841996431350708
After 25000 training step(s),validation accuracyusing average model is 0.9835996627807617
After 26000 training step(s),validation accuracyusing average model is 0.9845997095108032
After 27000 training step(s),validation accuracyusing average model is 0.9843996167182922
After 28000 training step(s),validation accuracyusing average model is 0.9835996627807617
After 29000 training step(s),validation accuracyusing average model is 0.9841997623443604
After 30000 training step(s), test accuracy using average model is 0.983700156211853